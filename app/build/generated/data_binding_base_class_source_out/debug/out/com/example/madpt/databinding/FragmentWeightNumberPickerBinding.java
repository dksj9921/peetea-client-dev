// Generated by view binder compiler. Do not edit!
package com.example.madpt.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.Button;
import android.widget.LinearLayout;
import android.widget.NumberPicker;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.example.madpt.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class FragmentWeightNumberPickerBinding implements ViewBinding {
  @NonNull
  private final LinearLayout rootView;

  @NonNull
  public final NumberPicker DecimalWeight;

  @NonNull
  public final NumberPicker IntegerWeight;

  @NonNull
  public final Button weightSetNo;

  @NonNull
  public final Button weightSetOk;

  private FragmentWeightNumberPickerBinding(@NonNull LinearLayout rootView,
      @NonNull NumberPicker DecimalWeight, @NonNull NumberPicker IntegerWeight,
      @NonNull Button weightSetNo, @NonNull Button weightSetOk) {
    this.rootView = rootView;
    this.DecimalWeight = DecimalWeight;
    this.IntegerWeight = IntegerWeight;
    this.weightSetNo = weightSetNo;
    this.weightSetOk = weightSetOk;
  }

  @Override
  @NonNull
  public LinearLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static FragmentWeightNumberPickerBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static FragmentWeightNumberPickerBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.fragment_weight_number_picker, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static FragmentWeightNumberPickerBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.DecimalWeight;
      NumberPicker DecimalWeight = ViewBindings.findChildViewById(rootView, id);
      if (DecimalWeight == null) {
        break missingId;
      }

      id = R.id.IntegerWeight;
      NumberPicker IntegerWeight = ViewBindings.findChildViewById(rootView, id);
      if (IntegerWeight == null) {
        break missingId;
      }

      id = R.id.weight_set_no;
      Button weightSetNo = ViewBindings.findChildViewById(rootView, id);
      if (weightSetNo == null) {
        break missingId;
      }

      id = R.id.weight_set_ok;
      Button weightSetOk = ViewBindings.findChildViewById(rootView, id);
      if (weightSetOk == null) {
        break missingId;
      }

      return new FragmentWeightNumberPickerBinding((LinearLayout) rootView, DecimalWeight,
          IntegerWeight, weightSetNo, weightSetOk);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
