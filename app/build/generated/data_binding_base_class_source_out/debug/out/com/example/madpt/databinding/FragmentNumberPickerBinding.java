// Generated by view binder compiler. Do not edit!
package com.example.madpt.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.Button;
import android.widget.LinearLayout;
import android.widget.NumberPicker;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.example.madpt.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class FragmentNumberPickerBinding implements ViewBinding {
  @NonNull
  private final LinearLayout rootView;

  @NonNull
  public final NumberPicker DecimalStature;

  @NonNull
  public final NumberPicker IntegerStature;

  @NonNull
  public final Button btnSetNo;

  @NonNull
  public final Button btnSetOk;

  private FragmentNumberPickerBinding(@NonNull LinearLayout rootView,
      @NonNull NumberPicker DecimalStature, @NonNull NumberPicker IntegerStature,
      @NonNull Button btnSetNo, @NonNull Button btnSetOk) {
    this.rootView = rootView;
    this.DecimalStature = DecimalStature;
    this.IntegerStature = IntegerStature;
    this.btnSetNo = btnSetNo;
    this.btnSetOk = btnSetOk;
  }

  @Override
  @NonNull
  public LinearLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static FragmentNumberPickerBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static FragmentNumberPickerBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.fragment_number_picker, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static FragmentNumberPickerBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.DecimalStature;
      NumberPicker DecimalStature = ViewBindings.findChildViewById(rootView, id);
      if (DecimalStature == null) {
        break missingId;
      }

      id = R.id.IntegerStature;
      NumberPicker IntegerStature = ViewBindings.findChildViewById(rootView, id);
      if (IntegerStature == null) {
        break missingId;
      }

      id = R.id.btn_set_no;
      Button btnSetNo = ViewBindings.findChildViewById(rootView, id);
      if (btnSetNo == null) {
        break missingId;
      }

      id = R.id.btn_set_ok;
      Button btnSetOk = ViewBindings.findChildViewById(rootView, id);
      if (btnSetOk == null) {
        break missingId;
      }

      return new FragmentNumberPickerBinding((LinearLayout) rootView, DecimalStature,
          IntegerStature, btnSetNo, btnSetOk);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
